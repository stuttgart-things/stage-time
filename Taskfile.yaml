---
version: 3
vars:
  PROJECT:
    sh: echo ${PROJECT}
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo $(git rev-parse --abbrev-ref HEAD); else echo main ; fi

tasks:
  push-chart:
    desc: Render scm secret example
    vars:
      DAGGER_MODULE: github.com/stuttgart-things/dagger/helm
      DAGGER_MODULE_VERSION: v0.24.0
      CHART_DIR: ./tekton
      EXPORT_DIR: /tmp/tekton.tgz
      REGISTRY: ghcr.io
      REPOSITORY: stuttgart-things/tekton
      USERNAME: patrick-hermann-sva
    cmds:
      - |
        dagger call -m {{ .DAGGER_MODULE }} \
        lint \
        --src {{ .CHART_DIR }} \
        -vv --progress plain
      - |
        dagger call -m {{ .DAGGER_MODULE }} \
        render \
        --src {{ .CHART_DIR }} \
        -vv --progress plain
      - |
        dagger call -m {{ .DAGGER_MODULE }} \
        package \
        --src {{ .CHART_DIR }} \
        -vv --progress plain \
        export --path={{ .EXPORT_DIR }}
      - |
        dagger call -m {{ .DAGGER_MODULE }} \
        push \
        --src {{ .CHART_DIR }} \
        --registry {{ .REGISTRY }} \
        --repository {{ .REPOSITORY }} \
        --username {{ .USERNAME }} \
        --password env:GITHUB_TOKEN \
        -vv --progress plain

  render-scm-secret:
    desc: Render scm secret example
    cmds:
      - |
        machineshop render \
        --source local \
        --template templates/git-basicauth-secret.yaml \
        --values "gitServer=github.com, user=user1, token=bla, repo=https://github.com/stuttgart-things/, name=patrick hermann, email=patrick@test.com, scm=github"

  branch:
    desc: Create branch from main
    cmds:
      - git checkout main
      - git branch
      - git pull
      - |
        echo "Enter to be created (remote) branch:"
        read BRANCH_NAME;
        git checkout -b ${BRANCH_NAME}
        git push origin ${BRANCH_NAME}
      - git branch
      - git branch --set-upstream-to=origin/main ${BRANCH_NAME}

  check:
    desc: "Run pre-commit hooks"
    cmds:
      - pre-commit run -a

  commit:
    desc: Commit + push code into branch
    deps:
      - check
    cmds:
      - rm -rf dist/
      - git branch --set-upstream-to=origin/{{ .BRANCH }}
      - git pull
      - |
        git add *
        if [[ -n $(git status --porcelain) ]]; then
          echo "ENTER COMMIT MESSAGE"
          read COMMIT_MESSAGE;
          echo "COMMITTING CHANGES"
          git commit --allow-empty -a -m "$(echo ${COMMIT_MESSAGE})"
        else
          echo "NO CHANGES"
        fi
        git push origin -u {{ .BRANCH }}

  vcluster:
    desc: Create/Destory vcluster
    cmds:
      - vcluster disconnect || echo "no vcluster connected"
      - helmfile {{ .OPERATION }} -f tests/vcluster.yaml
      - |
        if [ "{{ .OPERATION }}" = "apply" ]; then
          vcluster connect {{ .VCLUSTER_NAME }} -n {{ .VCLUSTER_NAMESPACE }}
          kubectl get namespace
        fi
    env:
      VCLUSTER_NAME: "{{ .VCLUSTER_NAME }}"
      VCLUSTER_NAMESPACE: "{{ .VCLUSTER_NAMESPACE }}"
    vars:
      OPERATION:
        sh: gum choose "apply" "destroy" --header="Apply or destroy vcluster?"
      VCLUSTER_NAME:
        sh: gum input --placeholder "Enter vcluster name"
      VCLUSTER_NAMESPACE:
        sh: gum input --placeholder "Enter vcluster namespace"

  pr:
    desc: Create pull request into main
    cmds:
      - task: commit
      - gh pr create -t "{{ .BRANCH }}" -b "{{ .BRANCH }} branch into main"
      - sleep 2s
      # - gh pr checks $(gh pr list | grep "^[^#;]" | awk '{print $1}') --watch
      - gh pr merge $(gh pr list | grep "^[^#;]" | grep '{{ .BRANCH }}' | awk '{print $1}') --auto --rebase --delete-branch
      - git checkout main && git pull

  render-chart:
    desc: Render tekton helm chart
    cmds:
      - |
        dagger call -m https://github.com/stuttgart-things/dagger/helm@v0.33.0 \
        helmfile-operation --operation template \
        --src . --helmfile-name tests/helmfile.yaml.gotmpl \
        #--kube-config file://~/.kube/labda-sthings-infra \
        -vv --progress plain

  do:
    desc: Select a task to run
    cmds:
      - |
        task=$(yq e '.tasks | keys' Taskfile.yaml | sed 's/^- //' | gum choose)
        task ${task}
